syntax = "proto3";

package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server

    rpc Store (stream StoreRequest) returns (ResponseStatus) {}

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server

    rpc Fetch (FetchRequest) returns (stream FetchResponse) {}

    // 3. REQUIRED (Parts 1 & 2): A method to delete files from the server

    rpc Delete (DeleteRequest) returns (ResponseStatus) {}

    // 4. REQUIRED (Parts 1 & 2): A method to list all files on the server

    rpc List (ResponseStatus) returns (ListResponse) {}

    // 5. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server

    // 7. Any other methods you deem necessary to complete the tasks of this assignment


}

// Add your message types here

message StoreRequest {
    string filename = 1;
    bytes data = 2;
    uint32 byteSent = 3;
}

message ResponseStatus {
    string status = 1;
}

message DeleteRequest {
    string filename = 1;
}

message FetchRequest{
    string filename = 1;
}

message FetchResponse{
    bytes data = 1;
    uint32 bytSent = 2;
    int32 FNF = 3;
}

message ListResponse{
    map<string,bytes> listmap = 1;
}
