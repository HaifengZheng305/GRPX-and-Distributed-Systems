syntax = "proto3";

package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server

    rpc Store (stream StoreRequest) returns (ResponseStatus) {};

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server

    rpc Fetch (FetchRequest) returns (stream FetchResponse) {};

    // 3. REQUIRED (Parts 1 & 2): A method to list all files on the server

     rpc List (ResponseStatus) returns (ListResponse) {}

    // 4. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server

    rpc Stat (StatusRequest) returns (FileStatus){};

    // 5. REQUIRED (Part 2 only): A method to request a write lock from the server

    rpc WriteAccess(WriteRequest) returns (ResponseStatus) {};

    // 6. REQUIRED (Part 2 only): A method named CallbackList to handle asynchronous file listing requests
    //                            from a client. This method should return a listing of files along with their
    //                            attribute information. The expected attribute information should include name,
    //                            size, modified time, and creation time.

    rpc CallbackList (FileRequest) returns (FileList) {};

    // 7. REQUIRED (Part 2 only): A method to delete a file from the server

    rpc Delete (DeleteRequest) returns (ResponseStatus) {};

    // 8. Any other methods you deem necessary to complete the tasks of this assignment

    rpc UnlockWriteAccess (WriteRequest) returns (ResponseStatus) {};


}

// Add your message types here
message StoreRequest {
    string filename = 1;
    bytes data = 2;
    uint32 CRC = 4;
}

message ResponseStatus {
    string status = 1;
}

message FileRequest{
     string name = 1;
};

message FileList{
    string status = 1;
    map<string,bytes> listmap = 2;
};

message FetchRequest{
    string filename = 1;
    uint32 CRC = 4;
}

message FetchResponse{
    bytes data = 1;
    uint32 bytSent = 2;
    int32 FNF = 3;
    int32 SameCRC = 4;
}

message DeleteRequest {
    string filename = 1;
}

message WriteRequest {
    string filename = 1;
    string clientid = 2;
}

message StatusRequest{
    string filename = 1;
}

message FileStatus{
    string filename = 1;
    bytes modifiedtime = 2;
}

message ListResponse{
    map<string,bytes> listmap = 1;
}
